[gd_scene load_steps=11 format=3 uid="uid://h3rpljer871y"]

[ext_resource type="Script" path="res://base_world_generator.gd" id="1_03r3j"]
[ext_resource type="Material" uid="uid://d1p8x2c0dtk3r" path="res://material.res" id="2_vamj8"]
[ext_resource type="Texture2D" uid="uid://bj1fw3j40srlg" path="res://icon.png" id="3_cta44"]

[sub_resource type="SphereMesh" id="SphereMesh_ahi0u"]
material = ExtResource("2_vamj8")
radial_segments = 200
rings = 100

[sub_resource type="Shader" id="Shader_vpcxn"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.0.alpha12's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}






void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
}
"

[sub_resource type="Gradient" id="Gradient_hh1r5"]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_f7uw0"]

[sub_resource type="NoiseTexture" id="NoiseTexture_snf6k"]
color_ramp = SubResource("Gradient_hh1r5")
noise = SubResource("FastNoiseLite_f7uw0")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_gsobp"]
render_priority = 0
shader = SubResource("Shader_vpcxn")
shader_param/albedo = Color(1, 1, 1, 1)
shader_param/metallic = 1.0
shader_param/metallic_texture_channel = Plane(1, 0, 0, 0)
shader_param/point_size = 1.0
shader_param/roughness = 1.0
shader_param/specular = 0.5
shader_param/texture_albedo = SubResource("NoiseTexture_snf6k")
shader_param/texture_metallic = ExtResource("3_cta44")
shader_param/uv1_offset = Vector3(0, 0, 0)
shader_param/uv1_scale = Vector3(1, 1, 1)
shader_param/uv2_offset = Vector3(0, 0, 0)
shader_param/uv2_scale = Vector3(1, 1, 1)

[sub_resource type="SphereMesh" id="SphereMesh_1nf02"]
material = SubResource("ShaderMaterial_gsobp")

[node name="root" type="Node"]
script = ExtResource("1_03r3j")

[node name="division" type="HSlider" parent="."]
offset_left = 14.0
offset_top = 12.0
offset_right = 1002.0
offset_bottom = 28.0
max_value = 256.0

[node name="light" type="DirectionalLight3D" parent="."]
transform = Transform3D(0.687747, 0, -0.725951, 0, 1, 0, 0.725951, 0, 0.687747, -2.57108, 0, 2.221)

[node name="camera" type="Camera3D" parent="."]
transform = Transform3D(0.876987, -0.11095, 0.46753, 0, 0.972978, 0.230898, -0.480514, -0.202495, 0.853289, 0.925282, 0.464786, 1.61636)

[node name="test_uv_sphere" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3.90642, 0, 0)
mesh = SubResource("SphereMesh_ahi0u")

[node name="temp" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 6.34574, 0, 0)
mesh = SubResource("SphereMesh_1nf02")
skeleton = NodePath("../test_uv_sphere")

[connection signal="drag_ended" from="division" to="." method="_on_division_drag_ended"]
